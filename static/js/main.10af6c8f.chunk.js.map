{"version":3,"sources":["components/layout/spinner.gif","components/layout/Navbar.js","context.js","components/layout/Spinner.js","components/tracks/Track.js","components/tracks/Tracks.js","components/tracks/Search.js","components/layout/Index.js","components/tracks/Lyrics.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","react_default","a","createElement","className","Context","React","createContext","reducer","state","action","type","Object","objectSpread","track_list","payloads","heading","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","dispatch","setState","inherits","createClass","key","value","_this2","axios","get","then","res","data","message","body","catch","err","console","log","props","children","Component","Consumer","Spinner","src","spinner","style","width","margin","display","Track","track","artist_name","track_name","album_name","Link","to","track_id","Tracks","undefined","Fragment","map","item","tracks_Track","Search","trackTitle","onChange","e","target","preventDefault","_this3","onSubmit","findTrack","bind","placeholder","name","Index","tracks_Search","tracks_Tracks","Lyrics","lyrics","match","params","id","_this$state","keys","lyrics_body","album_id","track_rating","App","context_Provider","HashRouter","layout_Navbar","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.10af6c8f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.b95289c6.gif\";","import React from 'react'\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark mb-5\">\r\n    <span className=\"navbar-brand mb-0 h1 mx-auto\">\r\n        LyricFinder\r\n    </span>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'SEARCH_TRACKS': \r\n            return {\r\n                ...state,\r\n                track_list: action.payloads,\r\n                heading: 'Search Results'\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport class Provider extends Component {\r\n\r\n    componentDidMount() {\r\n    axios.get(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/chart.tracks.get?chart_name=top&page=1&page_size=10&country=IN&f_has_lyrics=1&apikey=a9b4676ddff9c534ddf33d071f2a7c46`)\r\n    .then(res => {\r\n        // console.log(res.data);\r\n        this.setState({track_list: res.data.message.body.track_list});\r\n    })\r\n    .catch(err => console.log(err))\r\n    }\r\n    state = {\r\n        heading: 'Top 10 Tracks',\r\n        dispatch: action => this.setState(state => reducer(state, action))\r\n    }\r\n  render() {\r\n    return (\r\n        <Context.Provider value={this.state}>\r\n            {this.props.children}\r\n        </Context.Provider>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport const Consumer = Context.Consumer;","import React from 'react'\r\nimport spinner from './spinner.gif'\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <img src={spinner} style={{width: '200px', margin: '40px auto', display: 'block'}} />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Track = (props) => {\r\n    const { track } = props;\r\n  return (\r\n    <div className=\"col-md-6\">\r\n        <div className=\"card mb-4 shadow-sm\">\r\n        <div className=\"card-body\">\r\n            <h5>{track.artist_name}</h5>\r\n            <p className=\"card-text\">\r\n                <strong><i className=\"fas fa-play\"></i> Track</strong>: {track.track_name}\r\n                <br />\r\n                <strong><i className=\"fas fa-compact-disc\"></i> Album</strong>: {track.album_name}\r\n            </p>\r\n            <Link to={`lyrics/track/${track.track_id}`} className=\"btn btn-dark btn-block\">\r\n                <i className=\"fas fa-chevron-right\"></i> View Lyrics\r\n            </Link>\r\n        </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Track;\r\n","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context'\r\nimport Spinner from '../layout/Spinner'\r\nimport Track from './Track'\r\n\r\nclass Tracks extends Component {\r\n\r\n\r\n  render() {\r\n    return (\r\n        <Consumer>\r\n            {\r\n                value => {\r\n                    const { track_list, heading } = value;\r\n                    if(track_list === undefined || track_list.length === 0) {\r\n                      return <Spinner />\r\n                    } else {\r\n                      return (\r\n                        <React.Fragment>\r\n                          <h3 className=\"text-center mb-4\">{heading}</h3>\r\n                          <div className=\"row\">\r\n                            {track_list.map(item => <Track key={item.track.track_id} track={item.track} />)}\r\n                          </div>\r\n                        </React.Fragment>\r\n                      )\r\n                    }\r\n                }\r\n            }\r\n        </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Tracks;","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context'\r\nimport axios from 'axios'\r\n\r\nclass Search extends Component {\r\n    state = {\r\n        trackTitle: ''\r\n    }\r\n\r\n    findTrack(dispatch, e) {\r\n        e.preventDefault();\r\n            axios.get(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.search?q_track=${this.state.trackTitle}&page_size=3&page=10&s_track_rating=desc&apikey=a9b4676ddff9c534ddf33d071f2a7c46`)\r\n                .then(res => {\r\n                    console.log(\"saerch result is\",res.data);\r\n                    dispatch({type:\"SEARCH_TRACKS\", payloads: res.data.message.body.track_list})\r\n\r\n                    this.setState({trackTitle: ''})\r\n                    // this.setState({\r\n                    //     track_list: res.data.message.body.track_list\r\n                    // });\r\n                })\r\n                .catch(err => console.log(err))\r\n    }\r\n    onChange = (e) => {\r\n        this.setState({trackTitle: e.target.value});\r\n    } \r\n  render() {\r\n    return (\r\n        <Consumer>\r\n            { value => {\r\n                const { dispatch } = value;\r\n                return (\r\n                    <div className=\"card card-body mb-4 p-4\">\r\n                        <h1 className=\"display-4 text-center\">\r\n                            <i className=\"fas fa-music\"></i> Search For A Song\r\n                        </h1>\r\n                        <p className=\"lead text-center\">Get the lyrics for any song</p>\r\n                        <form onSubmit={this.findTrack.bind(this, dispatch)}>\r\n                            <div className=\"form-group\">\r\n                                <input \r\n                                type=\"text\" \r\n                                className=\"form-control form-control-lg\" \r\n                                placeholder=\"Song Title....\" \r\n                                name=\"trackTitle\" \r\n                                value={this.state.trackTitle} \r\n                                onChange={this.onChange}\r\n                                />\r\n                            </div>\r\n                            <button className=\"btn btn-primary btn-lg btn-block mb-5\" type=\"submit\">Get Track Lyrics</button>\r\n                        </form>\r\n                    </div>\r\n                )\r\n            }}\r\n        </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default  Search;","import React from 'react'\r\nimport Tracks from '../tracks/Tracks'\r\nimport Search from '../tracks/Search'\r\n\r\nconst Index = () => {\r\n  return (\r\n    <React.Fragment>\r\n        <Search />\r\n        <Tracks />\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\n\r\nexport default Index;","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport Spinner from '../layout/Spinner';\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Lyrics extends Component {\r\n    state = {\r\n        track: {},\r\n        lyrics: {}\r\n    }\r\n    componentDidMount() {\r\n        axios.get(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.lyrics.get?track_id=${this.props.match.params.id}&apikey=a9b4676ddff9c534ddf33d071f2a7c46`)\r\n            .then(res => {\r\n                console.log(res.data);\r\n                    this.setState({\r\n                        lyrics: res.data.message.body.lyrics\r\n                    });\r\n            return axios.get(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.get?track_id=${this.props.match.params.id}&apikey=a9b4676ddff9c534ddf33d071f2a7c46`)\r\n            })\r\n            .then(res => this.setState({\r\n                track: res.data.message.body.track\r\n            }))\r\n            .catch(err => console.log(err))\r\n        }\r\n  render() {\r\n      const { track, lyrics } = this.state;\r\n      if(track === undefined || \r\n        lyrics === undefined ||\r\n        Object.keys(track).length === 0 || \r\n        Object.keys(lyrics).length === 0) {\r\n            return <Spinner />\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <Link to=\"/\" className=\"btn btn-sm btn-dark mb-4\">Go Back</Link>\r\n                    <div className=\"card\">\r\n                        <h5 className=\"card-header\">\r\n                            {track.track_name} by {' '} <span className=\"text-secondary\">{track.artist_name}</span>\r\n                        </h5>\r\n                        <div className=\"card-body\">\r\n                            <p className=\"card-text\">{lyrics.lyrics_body}</p>\r\n                        </div>\r\n                    </div>\r\n                    <ul className=\"list-group mt-3\">\r\n                        <li className=\"list-group-item\">\r\n                            <strong>Album Id:</strong> {track.album_id}\r\n                        </li>\r\n                        <li className=\"list-group-item\">\r\n                            <strong>Album Name</strong> {track.album_name}\r\n                        </li>\r\n                        <li className=\"list-group-item\">\r\n                            <strong>Track Rating:</strong> {track.track_rating}\r\n                        </li>                                                \r\n                    </ul>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n  }\r\n}\r\n\r\nexport default Lyrics;\r\n","import React, { Component } from \"react\";\nimport PropTypes from 'prop-types'\nimport Navbar from './components/layout/Navbar'\nimport Index from './components/layout/Index'\nimport Track from './components/tracks/Track'\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport { Provider } from './context'\nimport './App.css';\nimport Lyrics from \"./components/tracks/Lyrics\";\n\nclass App extends Component {\n  \n  render() {\n    return (\n      <Provider>\n        <Router>\n          <React.Fragment>\n            <Navbar />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Index} />\n                <Route exact path=\"/lyrics/track/:id\" component={Lyrics} />                \n              </Switch>\n            </div>\n          </React.Fragment>\n        </Router>        \n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}